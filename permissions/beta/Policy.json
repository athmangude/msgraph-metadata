{
  "$schema": "../../../../permissionsSchema.json",
  "permissions": {
    "Policy.Read.All": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read your organization\u0027s policies on behalf of the signed-in user.",
          "longDescription": "Read your organization\u0027s policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read all your organization\u0027s policies without a signed in user.",
          "longDescription": "Read your organization\u0027s policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/claimsmappingpolicies/{id}/appliesto": {},
            "/policies/homerealmdiscoverypolicies/{id}/appliesto": {},
            "/policies/tokenissuancepolicies/{id}/appliesto": {},
            "/policies/tokenlifetimepolicies/{id}/appliesto": {},
            "/policies/adminconsentrequestpolicy": {},
            "/identity/events/onsignupstart": {},
            "/identity/events/onsignupstart/{id}": {},
            "/identitygovernance/accessreviews/policy": {},
            "/policies/accessreviewpolicy": {},
            "/policies/activitybasedtimeoutpolicies": {},
            "/policies/activitybasedtimeoutpolicies/{id}": {},
            "/policies/appmanagementpolicies": {},
            "/policies/appmanagementpolicies/{id}": {},
            "/policies/appmanagementpolicies/{id}/appliesto": {},
            "/policies/authenticationflowspolicy": {},
            "/policies/authorizationpolicy/authorizationpolicy": {},
            "/policies/claimsmappingpolicies": {},
            "/policies/claimsmappingpolicies/{id}": {},
            "/policies/defaultappmanagementpolicy": {},
            "/policies/homerealmdiscoverypolicies": {},
            "/policies/homerealmdiscoverypolicies/{id}": {},
            "/policies/tokenissuancepolicies": {},
            "/policies/tokenissuancepolicies/{id}": {},
            "/policies/tokenlifetimepolicies": {},
            "/policies/tokenlifetimepolicies/{id}": {},
            "/trustframework/policies/": {},
            "/trustframework/policies/{id}": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH",
            "DELETE",
            "GET"
          ],
          "paths": {
            "/identity/conditionalaccess/policies/{id}": {},
            "/identity/conditionalaccess/namedlocations/{id}": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH",
            "GET"
          ],
          "paths": {
            "/identity/continuousaccessevaluationpolicy": {},
            "/policies/identitysecuritydefaultsenforcementpolicy": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST",
            "GET"
          ],
          "paths": {
            "/identity/conditionalaccess/policies": {},
            "/applications/{id}/tokenissuancepolicies": {},
            "/applications/{id}/tokenlifetimepolicies": {},
            "/serviceprincipals/{id}/claimsmappingpolicies": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies": {},
            "/identity/conditionalaccess/namedlocations": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE"
          ],
          "paths": {
            "/applications/{id}/tokenissuancepolicies/{id}": {},
            "/applications/{id}/tokenlifetimepolicies/{id}": {},
            "/serviceprincipals/{id}/claimsmappingpolicies/{id}": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies/{id}": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies/{id": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork",
            "DelegatedPersonal"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/b2cauthenticationmethodspolicy": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages": {},
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages/{id}": {},
            "/policies/mobileappmanagementpolicies": {},
            "/policies/mobiledevicemanagementpolicies": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}": {},
            "/policies/mobiledevicemanagementpolicies/{id}": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}/includedgroups": {},
            "/policies/mobiledevicemanagementpolicies/{id}/includedgroups": {}
          }
        }
      ]
    },
    "Policy.Read.ApplicationConfiguration": {
      "schemes": {
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read all your organization\u0027s application configuration policies without a signed in user.",
          "longDescription": "Read your organization\u0027s application configuration policies"
        }
      },
      "pathSets": []
    },
    "Policy.Read.ConditionalAccess": {
      "schemes": {},
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/identity/conditionalaccess/authenticationcontextclassreferences": {},
            "/identity/conditionalaccess/authenticationcontextclassreferences/{id}": {}
          }
        }
      ]
    },
    "Policy.Read.PermissionGrant": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read policies related to consent and permission grants for applications, on behalf of the signed-in user.",
          "longDescription": "Read consent and permission grant policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
          "longDescription": "Read consent and permission grant policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/permissiongrantpolicies/{id}/excludes": {},
            "/policies/permissiongrantpolicies/{id}/includes": {},
            "/policies/permissiongrantpolicies": {},
            "/policies/permissiongrantpolicies/{id}": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.AccessReview": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s access review policy on behalf of the signed-in user.",
          "longDescription": "Read and write your organization\u0027s access review policy"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s access review policy, without a signed-in user.",
          "longDescription": "Read and write your organization\u0027s access review policy"
        }
      },
      "pathSets": []
    },
    "Policy.ReadWrite.AccessReviews": {
      "schemes": {},
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/identitygovernance/accessreviews/policy": {},
            "/policies/accessreviewpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.ApplicationConfiguration": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s application configuration policies on behalf of the signed-in user.",
          "longDescription": "Read and write your organization\u0027s application configuration policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s application configuration policies, without a signed-in user.",
          "longDescription": "Read and write your organization\u0027s application configuration policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/claimsmappingpolicies/{id}/appliesto": {},
            "/policies/homerealmdiscoverypolicies/{id}/appliesto": {},
            "/policies/tokenissuancepolicies/{id}/appliesto": {},
            "/policies/tokenlifetimepolicies/{id}/appliesto": {},
            "/policies/appmanagementpolicies/{id}/appliesto": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE"
          ],
          "paths": {
            "/applications/{id}/tokenissuancepolicies/{id}": {},
            "/applications/{id}/tokenlifetimepolicies/{id}": {},
            "/serviceprincipals/{id}/claimsmappingpolicies/{id}": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies/{id}": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies/{id": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/applications/{id}/tokenissuancepolicies": {},
            "/applications/{id}/tokenlifetimepolicies": {},
            "/serviceprincipals/{id}/claimsmappingpolicies": {},
            "/serviceprincipals/{id}/homerealmdiscoverypolicies": {},
            "/serviceprincipals/{id}/tokenlifetimepolicies": {},
            "/identity/events/onsignupstart": {},
            "/policies/activitybasedtimeoutpolicies": {},
            "/policies/appmanagementpolicies": {},
            "/policies/claimsmappingpolicies": {},
            "/policies/homerealmdiscoverypolicies": {},
            "/policies/tokenissuancepolicies": {},
            "/policies/tokenlifetimepolicies": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PATCH",
            "PUT"
          ],
          "paths": {
            "/identity/events/onsignupstart/{id}": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PATCH"
          ],
          "paths": {
            "/policies/activitybasedtimeoutpolicies/{id}": {},
            "/policies/appmanagementpolicies/{id}": {},
            "/policies/claimsmappingpolicies/{id}": {},
            "/policies/homerealmdiscoverypolicies/{id}": {},
            "/policies/tokenissuancepolicies/{id}": {},
            "/policies/tokenlifetimepolicies/{id}": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/defaultappmanagementpolicy": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/applications/{id}/appmanagementpolicies": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.AuthenticationFlows": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write the authentication flow policies, on behalf of the signed-in user.",
          "longDescription": "Read and write your organization\u0027s authentication flow policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write the authentication flow policies for the tenant, without a signed in user.",
          "longDescription": "Read and write your organization\u0027s authentication flow policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/authenticationflowspolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.AuthenticationMethod": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write the authentication method policies, on behalf of the signed-in user.",
          "longDescription": "Read and write your organization\u0027s authentication method policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write the authentication method policies, without a signed-in user.",
          "longDescription": "Read and write your organization\u0027s authentication method policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork",
            "DelegatedPersonal"
          ],
          "methods": [
            "PATCH"
          ],
          "paths": {
            "/policies/b2cauthenticationmethodspolicy": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "DELETE",
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/microsoftauthenticator": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/sms": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/temporaryaccesspass": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authenticationmethodspolicy": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "DELETE",
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/email": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/fido2": {},
            "/policies/authenticationmethodspolicy/authenticationmethodconfigurations/passwordlessmicrosoftauthenticator": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.Authorization": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s authorization policy on behalf of the signed-in user.  For example, authorization policies can control some of the permissions that the out-of-the-box user role has by default.",
          "longDescription": "Read and write your organization\u0027s authorization policy"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s authorization policy on behalf of the signed-in user.  For example, authorization policies can control some of the permissions that the out-of-the-box user role has by default.",
          "longDescription": "Read and write your organization\u0027s authorization policy"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH"
          ],
          "paths": {
            "/policies/authorizationpolicy/authorizationpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.ConditionalAccess": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s conditional access policies on behalf of the signed-in user.",
          "longDescription": "Read and write your organization\u0027s conditional access policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH",
            "DELETE"
          ],
          "paths": {
            "/identity/conditionalaccess/policies/{id}": {},
            "/identity/conditionalaccess/namedlocations/{id}": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "PATCH"
          ],
          "paths": {
            "/identity/continuousaccessevaluationpolicy": {},
            "/policies/identitysecuritydefaultsenforcementpolicy": {},
            "/identity/conditionalaccess/authenticationcontextclassreferences/{id}": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/identity/conditionalaccess/policies": {},
            "/identity/conditionalaccess/namedlocations": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/identity/conditionalaccess/authenticationcontextclassreferences": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages": {},
            "/tenantrelationships/managedtenants/conditionalaccesspolicycoverages/{id}": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.ConsentRequest": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s consent requests policy on behalf of the signed-in user.",
          "longDescription": "Read and write your organization\u0027s consent requests policy"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s consent requests policy without a signed-in user.",
          "longDescription": "Read and write your organization\u0027s consent requests policy"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PUT"
          ],
          "paths": {
            "/policies/adminconsentrequestpolicy": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.FeatureRollout": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s feature rollout policies on behalf of the signed-in user. Includes abilities to assign and remove users and groups to rollout of a specific feature.",
          "longDescription": "Read and write your organization\u0027s feature rollout policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write feature rollout policies without a signed-in user. Includes abilities to assign and remove users and groups to rollout of a specific feature.",
          "longDescription": "Read and write feature rollout policies"
        }
      },
      "pathSets": []
    },
    "Policy.ReadWrite.MobilityManagement": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write the mobility management policies on behalf of the signed-in user. These control the settings for mobile device management (MDM) and mobile application management (MAM) applications.",
          "longDescription": "Read and write your organization\u0027s mobility management policies."
        }
      },
      "pathSets": [
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies": {},
            "/policies/mobiledevicemanagementpolicies": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "PATCH",
            "DELETE"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}": {},
            "/policies/mobiledevicemanagementpolicies/{id}": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "POST"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}/includedgroups": {},
            "/policies/mobiledevicemanagementpolicies/{id}/includedgroups": {}
          }
        },
        {
          "schemes": [
            "DelegatedWork"
          ],
          "methods": [
            "DELETE"
          ],
          "paths": {
            "/policies/mobileappmanagementpolicies/{id}/includedgroups/{id}": {},
            "/policies/mobiledevicemanagementpolicies/{id}/includedgroups/{id}": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.PermissionGrant": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to manage policies related to consent and permission grants for applications, on behalf of the signed-in user.",
          "longDescription": "Manage consent and permission grant policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to manage policies related to consent and permission grants for applications, without a signed-in user.",
          "longDescription": "Manage consent and permission grant policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/policies/permissiongrantpolicies/{id}/excludes": {},
            "/policies/permissiongrantpolicies/{id}/includes": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/policies/permissiongrantpolicies": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PATCH"
          ],
          "paths": {
            "/policies/permissiongrantpolicies/{id}": {}
          }
        }
      ]
    },
    "Policy.ReadWrite.TrustFramework": {
      "schemes": {
        "DelegatedWork": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s trust framework policies on behalf of the signed-in user.",
          "longDescription": "Read and write your organization\u0027s trust framework policies"
        },
        "Application": {
          "type": "DelegatedWork",
          "admin": true,
          "description": "Allows the app to read and write your organization\u0027s trust framework policies without a signed in user.",
          "longDescription": "Read and write your organization\u0027s trust framework policies"
        }
      },
      "pathSets": [
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET"
          ],
          "paths": {
            "/trustframework/policies/": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "GET",
            "DELETE",
            "PUT"
          ],
          "paths": {
            "/trustframework/policies/{id}": {}
          }
        },
        {
          "schemes": [
            "Application",
            "DelegatedWork"
          ],
          "methods": [
            "POST"
          ],
          "paths": {
            "/trustframework/policies": {}
          }
        }
      ]
    }
  }
}